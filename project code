import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import pandas as pd
import requests
import plotly.express as px

# Initialize the app
app = dash.Dash(__name__)
app.title = 'COVID-19 Dashboard'

# Load COVID-19 data from API
def load_data():
    url = 'https://disease.sh/v3/covid-19/countries'
    response = requests.get(url)
    data = response.json()
    df = pd.json_normalize(data)
    return df

# Prepare daily case data
def load_historical_data(country='World'):
    if country == 'World':
        url = 'https://disease.sh/v3/covid-19/historical/all?lastdays=30'
        data = requests.get(url).json()
        df = pd.DataFrame(data['cases'].items(), columns=['Date', 'Cases'])
        df['Date'] = pd.to_datetime(df['Date'])
    else:
        url = f'https://disease.sh/v3/covid-19/historical/{country}?lastdays=30'
        data = requests.get(url).json()
        timeline = data.get('timeline', {})
        if not timeline:
            return pd.DataFrame()
        df = pd.DataFrame(timeline['cases'].items(), columns=['Date', 'Cases'])
        df['Date'] = pd.to_datetime(df['Date'])
    return df

# Layout
app.layout = html.Div([
    html.H1('COVID-19 Dashboard', style={'textAlign': 'center'}),
    
    dcc.Dropdown(id='country-dropdown',
                 options=[{'label': 'World', 'value': 'World'}] +
                         [{'label': country, 'value': country} for country in load_data()['country']],
                 value='World',
                 multi=False,
                 style={'width': '50%', 'margin': 'auto'}
                ),

    html.Br(),

    dcc.Graph(id='line-chart'),
    dcc.Graph(id='bar-chart'),
    dcc.Graph(id='pie-chart')
])

# Callbacks
@app.callback(
    [Output('line-chart', 'figure'),
     Output('bar-chart', 'figure'),
     Output('pie-chart', 'figure')],
    [Input('country-dropdown', 'value')]
)
def update_dashboard(selected_country):
    df_global = load_data()
    df_history = load_historical_data(selected_country)

    # Line Chart – Daily Cases
    if df_history.empty:
        line_fig = px.line(title="No data available for selected country.")
    else:
        df_history['Daily Cases'] = df_history['Cases'].diff().fillna(0)
        line_fig = px.line(df_history, x='Date', y='Daily Cases',
                           title=f'Daily New COVID-19 Cases - {selected_country}')

    # Bar Chart – Total Cases by Country
    bar_df = df_global.nlargest(10, 'cases')
    bar_fig = px.bar(bar_df, x='country', y='cases',
